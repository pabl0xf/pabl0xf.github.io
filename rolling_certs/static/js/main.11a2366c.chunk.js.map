{"version":3,"sources":["component/img/CertificadoFullstack1.png","component/pdfreact/futura-bold.ttf","component/pdfreact/Nexa-Light.otf","component/pdfreact/Nexa-Bold.otf","component/img/rollingcode-logo.png","logo.svg","component/img/a4vertical.jpg","component/pdfreact/pdfreactcreater.js","component/pdfCreater/pdfCreater.js","component/header/header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Font","register","family","format","src","font1","font2","font3","styles","StyleSheet","create","image","objectFit","width","height","position","page","backgroundColor","orientation","name","top","left","fontSize","textAlign","fontFamily","color","fontWeight","fontStyle","letterSpacing","toptittle","topsubtittle","toptittlebold","tittle","tittlebold","subtittle","date","MyDocument","datacharge","style","document1","size","image1","name1","PDFCreater","useState","data","setData","datapreview","setDatapreview","handleChange","e","target","value","className","id","action","type","onChange","onClick","event","document","fileName","blob","url","loading","error","style1","viewerpdf","Header","logoImg","alt","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.11a2366c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/CertificadoFullstack1.169d8989.png\";","module.exports = __webpack_public_path__ + \"static/media/futura-bold.5f98876a.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Nexa-Light.12108809.otf\";","module.exports = __webpack_public_path__ + \"static/media/Nexa-Bold.c9f309b3.otf\";","module.exports = __webpack_public_path__ + \"static/media/rollingcode-logo.c89dadf5.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/a4vertical.08bc2dc1.jpg\";","import React from 'react';\r\nimport { Page, Image, Text, View, Document, StyleSheet, Font } from '@react-pdf/renderer';\r\nimport image1 from '../img/CertificadoFullstack1.png';\r\nimport styles1 from './pdfreactcreater.css';\r\nimport font1 from './futura-bold.ttf'\r\nimport font2 from './Nexa-Light.otf'\r\nimport font3 from './Nexa-Bold.otf'\r\n// Create styles\r\n\r\n\r\n// Register font\r\n\r\nFont.register(\r\n    { \r\n      family: 'Futura-Bold', \r\n      format: \"truetype\",\r\n      src: font1\r\n      \r\n    }\r\n  \r\n\r\n);\r\n \r\nFont.register(\r\n  { \r\n    family: 'Sample', \r\n    format: \"truetype\",\r\n    src: font2  // font-style: normal, font-weight: normal   \r\n\r\n    \r\n  }\r\n  \r\n); \r\nFont.register(\r\n  { \r\n    family: 'Sample-bold', \r\n    format: \"truetype\",\r\n    src: font3  // font-style: normal, font-weight: normal   \r\n    \r\n    \r\n  }\r\n  \r\n); \r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  \r\n  image: {\r\n    objectFit: 'cover',\r\n    width: '100%',\r\n    height:'100%',\r\n    position:'absolute'\r\n  },\r\n  page: {\r\n    \r\n    backgroundColor: '#E4E4E4',\r\n    orientation:\"landscape\"\r\n  },\r\n  name: {\r\n    width:'100%',\r\n    top: 265,\r\n    left:20,\r\n    fontSize : '40px',\r\n    textAlign: 'center',\r\n    fontFamily:'Futura-Bold',\r\n    color: '#074da2',\r\n    fontWeight:700,\r\n    fontStyle:'normal',\r\n    letterSpacing:'2px'\r\n  },\r\n  //top tittle\r\n  toptittle:{\r\n    textAlign: 'center',\r\n    width:'100%',\r\n    top: 246,\r\n    left: 20,\r\n    fontSize : '18px',\r\n  },\r\n  topsubtittle:{\r\n    fontFamily:'Sample',\r\n    color: '#346a7f',\r\n    letterSpacing:'1.5px',\r\n  },\r\n  toptittlebold:{\r\n    color: '#346a7f',\r\n    fontFamily:'Sample-bold',\r\n    fontSize : '20px',\r\n  },\r\n  //titulo propiamente dicho o no\r\n  tittle: {\r\n    textAlign: 'center',\r\n    width:'100%',\r\n    top: 278,\r\n    left: 20,\r\n    fontSize : '18px',\r\n  },\r\n  tittlebold: {\r\n    color: '#346a7f',\r\n    fontFamily:'Sample-bold',\r\n    fontSize : '20px',\r\n    \r\n  },\r\n  subtittle:{\r\n    fontFamily:'Sample',\r\n    color: '#346a7f',\r\n    letterSpacing:'1.5px',\r\n    \r\n  },\r\n  //fecha\r\n  date: {\r\n    width:'100%',\r\n    textAlign:'center',\r\n    top: 283,\r\n    left: 20,\r\n    color: '#346a7f',\r\n    fontFamily:'Sample',\r\n    letterSpacing:'1.5px'\r\n    \r\n  }\r\n});\r\nexport default function MyDocument(datacharge){\r\n\r\n\r\n\r\n  return(\r\n\r\n    <Document  style={styles.document1}>\r\n      <Page orientation=\"landscape\" size=\"A4\" style={styles.page}>\r\n\r\n        <View style={styles.image}>\r\n          \r\n          <Image src={image1} />\r\n\r\n        </View>\r\n\r\n        <View style={styles.toptittle}>\r\n\r\n          <Text style={styles.toptittlebold}>Rolling Code School <Text style={styles.topsubtittle}>certifies that</Text></Text>\r\n\r\n        </View>\r\n\r\n        <View style={styles.name}>\r\n\r\n          <Text>{datacharge.datacharge.name1}</Text>\r\n\r\n        </View>\r\n\r\n        <View style={styles.tittle}>\r\n          <Text style={styles.subtittle}>succesfully completed <Text style={styles.tittlebold}>{datacharge.datacharge.tittle}</Text></Text>\r\n          \r\n\r\n        </View>\r\n\r\n        <View style={styles.date}>\r\n        <Text>,from <Text>{datacharge.datacharge.date}</Text></Text>\r\n          \r\n\r\n        </View>\r\n\r\n      </Page>\r\n    </Document>\r\n\r\n\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\nimport './dpfCreater.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as jsPDF from 'jspdf';\r\nimport image1 from '../img/a4vertical.jpg';\r\n/* import style from './pdfCreater.css' */\r\n\r\nimport style1 from './dpfCreater.css'\r\n\r\nimport ReactPDF from '@react-pdf/renderer';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { PDFViewer } from '@react-pdf/renderer';\r\nimport { Page, Text, View, Document, StyleSheet } from '@react-pdf/renderer';\r\nimport { PDFDownloadLink } from '@react-pdf/renderer'\r\nimport MyDocument from '../pdfreact/pdfreactcreater'\r\n\r\n/* por ahora por un tema del pdfreact cada ves q sehace un cambio aqui hay q reiniciar la consola, aveces, mi no entender */\r\n\r\nconst styles1 = StyleSheet.create({\r\n  \r\n  \r\n\r\n  });\r\n\r\n\r\n\r\n\r\nexport default function PDFCreater() {\r\n\r\n    const [data, setData] = useState({\r\n        name1:'nombre',\r\n        date:'fecha',\r\n        tittle:'titulo'\r\n    });\r\n    const [datapreview, setDatapreview] = useState({\r\n        name1:'nombre',\r\n        date:'fecha',\r\n        tittle:'titulo'\r\n    });\r\n   \r\n\r\n    const handleChange = e =>{\r\n        setData({\r\n            ...data,\r\n            [e.target.name]:e.target.value\r\n\r\n        });\r\n\r\n    \r\n        \r\n    }\r\n\r\n    const precarga = event => {\r\n        setDatapreview({\r\n            ...datapreview,\r\n            name1: data.name1,\r\n            date: data.date,\r\n            tittle: data.tittle,\r\n\r\n        });\r\n        \r\n    \r\n    };\r\n\r\n        return (\r\n        \r\n            <div className=\"container \">\r\n            \r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-xl-4\">\r\n                    <h3>Datos a cargar</h3>\r\n                    \r\n                    <form id=\"\" action=\"\">\r\n                        <label className=\"col-12\" >Titulo</label>\r\n\r\n                        <input  name={'tittle'} className=\"form-control mb-4\" type=\"text\" \r\n                        onChange={handleChange}/>\r\n\r\n                        <label className=\"col-12\"  >Nombre</label>\r\n\r\n                        <input name={'name1'} className=\"form-control mb-4\" type=\"text\" \r\n                        onChange={handleChange}/>\r\n                        \r\n                        <label className=\"col-12\" >Fecha</label>\r\n\r\n                        <input name={'date'} className=\"form-control mb-4\" type=\"text\" \r\n                        onChange={handleChange}/>\r\n                        <div className='d-flex justify-content-between'>\r\n                            <div className=\"col-3 col-xl-4 btn btn-primary\" onClick={precarga}>Cargar vista(no es necesario)</div>\r\n                            <div>\r\n                            <PDFDownloadLink  className=\" btn btn-primary\" document={<MyDocument datacharge={data} />} fileName={data.name1 +\".pdf\"}>\r\n                            {({ blob, url, loading, error }) => (loading ? 'Cargando...' : 'GenerarPDF')}\r\n                            </PDFDownloadLink>\r\n                            </div>\r\n                        </div> \r\n                    </form>\r\n                </div>\r\n                <div className=\"col-12 col-xl-8\">\r\n                    \r\n                    <h3>Preview</h3>\r\n                    <PDFViewer width='800' height='600' className={style1.viewerpdf }>\r\n\r\n                        \r\n                        <MyDocument datacharge={datapreview}  />\r\n\r\n                        \r\n                    </PDFViewer>\r\n                    \r\n\r\n                </div>\r\n\r\n                \r\n            </div>\r\n                \r\n            </div>\r\n\r\n        \r\n        \r\n        \r\n        );\r\n\r\n    \r\n\r\n}\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport styles from './header.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport logoImg from '../img/rollingcode-logo.png'\r\n\r\nexport default function Header(){\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n            <div className={'header container-fluid'}>\r\n\r\n                <div className='d-flex'><img src={logoImg} className={'imgheader'} alt=\"RollingCode\"/></div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n    )\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport PDFCreater from './component/pdfCreater/pdfCreater.js'\r\nimport ReactDOM from 'react-dom';\r\nimport { PDFViewer } from '@react-pdf/renderer';\r\nimport Header from './component/header/header.js';\r\nfunction App() {\r\n  return (\r\n\r\n    <div className='w-100'> \r\n      <Header />\r\n      <PDFCreater />\r\n\r\n    </div> \r\n    \r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}